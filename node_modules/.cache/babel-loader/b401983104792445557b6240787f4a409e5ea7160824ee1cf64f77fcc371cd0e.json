{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mn320\\\\Desktop\\\\myblog\\\\src\\\\components\\\\Services\\\\Services.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Services.css'; // Import the CSS for services layout\nimport ServiceModal from './ServiceModal'; // Import the pop-up modal component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Services = () => {\n  _s();\n  const [selectedService, setSelectedService] = useState(null);\n  const services = [{\n    id: 1,\n    title: 'Reddit Scraping Service',\n    description: 'Scrape Reddit for posts, comments, or both based on your custom criteria.',\n    options: {\n      outputFormats: ['CSV', 'JSON', 'XML'],\n      contentTypes: ['Posts', 'Comments', 'Both'],\n      keywordsRequired: true,\n      maxRecords: true\n    },\n    imageSrc: 'images/reddit-scraping.jpg'\n  }, {\n    id: 2,\n    title: 'Web Automation Tool',\n    description: 'Automate web interactions using Python and Selenium.',\n    options: {\n      outputFormats: ['CSV', 'JSON'],\n      contentTypes: ['Both'],\n      keywordsRequired: false,\n      maxRecords: false\n    },\n    imageSrc: 'images/web-automation.jpg'\n  }, {\n    id: 3,\n    title: 'Custom Web Scraping',\n    description: 'Tailor-made web scraping solutions for any website.',\n    options: {\n      outputFormats: ['CSV', 'JSON', 'XML', 'HTML'],\n      contentTypes: ['Custom'],\n      keywordsRequired: true,\n      maxRecords: true\n    },\n    imageSrc: 'images/custom-scraping.jpg'\n  }];\n  const handleOrder = service => {\n    setSelectedService(service);\n  };\n  const closeModal = () => {\n    setSelectedService(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"services-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Web Scraping Services\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"services-container\",\n      children: services.map(service => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"service-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: service.imageSrc,\n          alt: service.title,\n          className: \"service-thumbnail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: service.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: service.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOrder(service),\n          children: \"Order Service\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, service.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), selectedService && /*#__PURE__*/_jsxDEV(ServiceModal, {\n      service: selectedService,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Services, \"RVFPamKAVs5WA/LmvTy27MbrF0M=\");\n_c = Services;\nexport default Services;\nvar _c;\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["React","useState","ServiceModal","jsxDEV","_jsxDEV","Services","_s","selectedService","setSelectedService","services","id","title","description","options","outputFormats","contentTypes","keywordsRequired","maxRecords","imageSrc","handleOrder","service","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","src","alt","onClick","onClose","_c","$RefreshReg$"],"sources":["C:/Users/mn320/Desktop/myblog/src/components/Services/Services.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Services.css'; // Import the CSS for services layout\r\nimport ServiceModal from './ServiceModal'; // Import the pop-up modal component\r\n\r\nconst Services = () => {\r\n  const [selectedService, setSelectedService] = useState(null);\r\n\r\n  const services = [\r\n    {\r\n      id: 1,\r\n      title: 'Reddit Scraping Service',\r\n      description: 'Scrape Reddit for posts, comments, or both based on your custom criteria.',\r\n      options: {\r\n        outputFormats: ['CSV', 'JSON', 'XML'],\r\n        contentTypes: ['Posts', 'Comments', 'Both'],\r\n        keywordsRequired: true,\r\n        maxRecords: true\r\n      },\r\n      imageSrc: 'images/reddit-scraping.jpg'\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Web Automation Tool',\r\n      description: 'Automate web interactions using Python and Selenium.',\r\n      options: {\r\n        outputFormats: ['CSV', 'JSON'],\r\n        contentTypes: ['Both'],\r\n        keywordsRequired: false,\r\n        maxRecords: false\r\n      },\r\n      imageSrc: 'images/web-automation.jpg'\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Custom Web Scraping',\r\n      description: 'Tailor-made web scraping solutions for any website.',\r\n      options: {\r\n        outputFormats: ['CSV', 'JSON', 'XML', 'HTML'],\r\n        contentTypes: ['Custom'],\r\n        keywordsRequired: true,\r\n        maxRecords: true\r\n      },\r\n      imageSrc: 'images/custom-scraping.jpg'\r\n    }\r\n  ];\r\n\r\n  const handleOrder = (service) => {\r\n    setSelectedService(service);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setSelectedService(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"services-section\">\r\n      <h2>My Web Scraping Services</h2>\r\n      <div className=\"services-container\">\r\n        {services.map((service) => (\r\n          <div key={service.id} className=\"service-card\">\r\n            <img src={service.imageSrc} alt={service.title} className=\"service-thumbnail\" />\r\n            <h3>{service.title}</h3>\r\n            <p>{service.description}</p>\r\n            <button onClick={() => handleOrder(service)}>Order Service</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {selectedService && (\r\n        <ServiceModal service={selectedService} onClose={closeModal} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}