{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mn320\\\\Desktop\\\\myblog\\\\src\\\\components\\\\CmdWindow\\\\CmdWindow.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport 'C:/Users/mn320/Desktop/myblog/src/components/CmdWindow/CmdWinow.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CmdWindow = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  useEffect(() => {\n    const fakeLogs = [\"Connecting to server...\", \"Fetching data...\", \"Processing data...\", \"Generating report...\", \"Connection successful!\", \"Closing connection...\"];\n    let logIndex = 0;\n    const logInterval = setInterval(() => {\n      if (logIndex < fakeLogs.length) {\n        setLogs(prevLogs => [...prevLogs, fakeLogs[logIndex]]);\n        logIndex++;\n      } else {\n        clearInterval(logInterval);\n      }\n    }, 1000); // Print a new log every second\n\n    return () => clearInterval(logInterval); // Cleanup on component unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"terminal-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terminal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dot red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dot yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dot green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terminal-body\",\n      children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: log\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(CmdWindow, \"6h9FKNtuyCQaVwwdLqmS9omOzEQ=\");\n_c = CmdWindow;\nexport default CmdWindow;\nvar _c;\n$RefreshReg$(_c, \"CmdWindow\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CmdWindow","_s","logs","setLogs","fakeLogs","logIndex","logInterval","setInterval","length","prevLogs","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","log","index","_c","$RefreshReg$"],"sources":["C:/Users/mn320/Desktop/myblog/src/components/CmdWindow/CmdWindow.js"],"sourcesContent":["import React from 'react';\r\nimport 'C:/Users/mn320/Desktop/myblog/src/components/CmdWindow/CmdWinow.css'; \r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\nconst CmdWindow = () => {\r\n  const [logs, setLogs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fakeLogs = [\r\n      \"Connecting to server...\",\r\n      \"Fetching data...\",\r\n      \"Processing data...\",\r\n      \"Generating report...\",\r\n      \"Connection successful!\",\r\n      \"Closing connection...\"\r\n    ];\r\n\r\n    let logIndex = 0;\r\n\r\n    const logInterval = setInterval(() => {\r\n      if (logIndex < fakeLogs.length) {\r\n        setLogs((prevLogs) => [...prevLogs, fakeLogs[logIndex]]);\r\n        logIndex++;\r\n      } else {\r\n        clearInterval(logInterval);\r\n      }\r\n    }, 1000); // Print a new log every second\r\n\r\n    return () => clearInterval(logInterval); // Cleanup on component unmount\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"terminal-window\">\r\n      <div className=\"terminal-header\">\r\n        <span className=\"dot red\"></span>\r\n        <span className=\"dot yellow\"></span>\r\n        <span className=\"dot green\"></span>\r\n      </div>\r\n      <div className=\"terminal-body\">\r\n        {logs.map((log, index) => (\r\n          <div key={index}>{log}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CmdWindow;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,qEAAqE;AAC5E,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,MAAMQ,QAAQ,GAAG,CACf,yBAAyB,EACzB,kBAAkB,EAClB,oBAAoB,EACpB,sBAAsB,EACtB,wBAAwB,EACxB,uBAAuB,CACxB;IAED,IAAIC,QAAQ,GAAG,CAAC;IAEhB,MAAMC,WAAW,GAAGC,WAAW,CAAC,MAAM;MACpC,IAAIF,QAAQ,GAAGD,QAAQ,CAACI,MAAM,EAAE;QAC9BL,OAAO,CAAEM,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEL,QAAQ,CAACC,QAAQ,CAAC,CAAC,CAAC;QACxDA,QAAQ,EAAE;MACZ,CAAC,MAAM;QACLK,aAAa,CAACJ,WAAW,CAAC;MAC5B;IACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMI,aAAa,CAACJ,WAAW,CAAC,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKY,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9Bb,OAAA;MAAKY,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9Bb,OAAA;QAAMY,SAAS,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjCjB,OAAA;QAAMY,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpCjB,OAAA;QAAMY,SAAS,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACNjB,OAAA;MAAKY,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BV,IAAI,CAACe,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACnBpB,OAAA;QAAAa,QAAA,EAAkBM;MAAG,GAAXC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAf,EAAA,CAzCKD,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AA2Cf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}